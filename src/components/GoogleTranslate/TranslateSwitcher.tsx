"use client";

import { useEffect, useRef } from "react";

interface Props {
  className?: string;
}

export default function TranslateSwitcher({ className }: Props) {
  const countries = [
    { flag: "üá¶üá∫", name: "English", code: "en" },
    { flag: "üáªüá≥", name: "Vietnam", code: "vi" },
    { flag: "üá≤üáæ", name: "Malaysia", code: "ms" },
    { flag: "üáπüá≠", name: "Thailand", code: "th" },
    { flag: "üáµüá≠", name: "Philippines", code: "tl" },
    { flag: "üá®üá≥", name: "‰∏≠ÊñáÔºàÁÆÄ‰ΩìÔºâ", code: "zh-CN" },
  ];
  const injectedRef = useRef(false);

  useEffect(() => {
    if (injectedRef.current) return;
    injectedRef.current = true;

    // callback kh·ªüi t·∫°o cho widget
    window.googleTranslateElementInit = () => {
      // Ch·ªâ ƒë·ªãnh ng√¥n ng·ªØ g·ªëc l√† vi (ho·∫∑c en tu·ª≥ site)
      new window.google!.translate.TranslateElement(
        {
          pageLanguage: "en",
          includedLanguages: "en,vi,ms,th,tl,zh-CN",
          layout: 1, // 0: horizontal, 1: vertical (dropdown), 2: simple
          autoDisplay: false,
        },
        "google_translate_element"
      )

    };

    // n·∫°p script c·ªßa Google Translate
    const s = document.createElement("script");
    s.src = "//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit";
    s.async = true;
    document.body.appendChild(s);

    return () => {
      // kh√¥ng c·∫ßn cleanup ƒë·∫∑c bi·ªát; ƒë·ªÉ nguy√™n cho trang
    };
  }, []);



  // m·∫πo ƒë·ªïi ng√¥n ng·ªØ qua JS (·∫©n UI g·ªëc c·ªßa Google n·∫øu mu·ªën)
  const changeLang = (lang: string) => {
    const combo = document.querySelector<HTMLSelectElement>("select.goog-te-combo");
    if (!combo) {
      setTimeout(() => changeLang(lang), 200);
      return;
    }
    if (combo.value !== lang) {
      combo.value = lang;
      // b·∫Øn c·∫£ change + input cho ch·∫Øc
      combo.dispatchEvent(new Event("change"));
      combo.dispatchEvent(new Event("input"));
    }
  };

  return (
    <div className={`flex items-center gap-2  ${className || ""}`}>
      {/* 1) Widget m·∫∑c ƒë·ªãnh c·ªßa Google (c√≥ th·ªÉ ·∫©n b·∫±ng CSS) */}
      <div id="google_translate_element" className="min-w-[180px]" />

      {/* 2) Dropdown tu·ª≥ bi·∫øn (g·ªçi changeLang) */}
      <select
        aria-label="Translate"
        className="
        border border-amber-400
      hover:border-amber-500 
      focus:border-r-amber-500 focus:ring-2
      focus:ring-amber-300/30 focus:outline-none
        font-medium text-sm md:text-xl
        rounded px-2 py-1
        transition-colors duration-300
        "
        onChange={(e) => changeLang(e.target.value)}
        defaultValue="en"
      >
        {countries.map((c) => {
          return (
            <option className="notranslate text-sm md:text-xl" key={c.code} value={c.code}>{c.flag} {c.name}</option>
          )
        })}

      </select>
    </div>
  );
}
